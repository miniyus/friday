openapi: 3.0.1
info:
  title: Friday API
  description: Friday REST API Docs with Swagger UI.
  version: 0.0.1
servers:
- url: http://127.0.0.1:8080
tags:
- name: users
  description: Users API
- name: auth
  description: Auth Api
paths:
  /v1/users:
    post:
      tags:
      - users
      summary: user api
      description: user api
      operationId: create user
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/com.miniyus.friday.adapter.in.rest.request.CreateUserRequest'
            examples:
              create user:
                value: |-
                  {
                    "email" : "russel.hermann@example.com",
                    "password" : "wv3vdbrl1",
                    "name" : "Herbert Haag IV",
                    "role" : "USER"
                  }
      responses:
        "201":
          description: "201"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/com.miniyus.friday.adapter.in.rest.resource.UserResources$UserResource'
              examples:
                create user:
                  value: |-
                    {
                      "id" : 1,
                      "email" : "russel.hermann@example.com",
                      "name" : "Herbert Haag IV",
                      "role" : "USER",
                      "snsId" : null,
                      "provider" : null,
                      "createdAt" : "2023-10-03T03:59:07.745907",
                      "updatedAt" : "2023-10-03T03:59:07.745918"
                    }
      security:
      - bearerAuthJWT: []
  /v1/auth/logout:
    post:
      tags:
      - auth
      summary: auth api
      description: auth api
      operationId: auth logout
      responses:
        "204":
          description: "204"
      security:
      - bearerAuthJWT: []
  /v1/auth/me:
    get:
      tags:
      - auth
      summary: auth api
      description: auth api
      operationId: auth user info
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/com.miniyus.friday.adapter.in.rest.resource.UserResources$AuthUserResource'
              examples:
                auth user info:
                  value: |-
                    {
                      "id" : 1,
                      "email" : "dell.hartmann@hotmail.com",
                      "name" : "Cristopher Herman",
                      "role" : "USER",
                      "snsId" : "Cristopher Herman",
                      "provider" : null
                    }
      security:
      - bearerAuthJWT: []
  /v1/auth/refresh-token:
    post:
      tags:
      - auth
      summary: auth api
      description: auth api
      operationId: auth refresh
      parameters:
      - name: RefreshToken
        in: header
        description: refresh-token
        required: true
        schema:
          type: string
        example: refresh
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/com.miniyus.friday.infrastructure.jwt.IssueToken'
              examples:
                auth refresh:
                  value: |-
                    {
                      "tokenType" : "Bearer",
                      "accessToken" : "access",
                      "expiresIn" : 3600,
                      "refreshToken" : "refresh"
                    }
  /v1/auth/signin:
    post:
      tags:
      - auth
      summary: auth api
      description: auth api
      operationId: auth signin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/com.miniyus.friday.infrastructure.security.auth.PasswordAuthentication'
            examples:
              auth signin:
                value: |-
                  {
                    "email" : "broderick.mitchell@hotmail.com",
                    "password" : "qllrur35n"
                  }
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/com.miniyus.friday.infrastructure.security.auth.response.PasswordTokenResponse'
              examples:
                auth signin:
                  value: |-
                    {
                      "id" : 1,
                      "email" : "broderick.mitchell@hotmail.com",
                      "name" : "Chuck Halvorson",
                      "tokens" : {
                        "tokenType" : "Bearer",
                        "accessToken" : "access",
                        "expiresIn" : 3600,
                        "refreshToken" : "refresh"
                      }
                    }
  /v1/auth/signup:
    post:
      tags:
      - auth
      summary: auth api
      description: auth api
      operationId: auth signup
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/com.miniyus.friday.infrastructure.security.auth.userinfo.PasswordUserInfo'
            examples:
              auth signup:
                value: |-
                  {
                    "email" : "regenia.wilderman@example.com",
                    "password" : "7trejs3hy6",
                    "name" : "Roseanne Bailey"
                  }
      responses:
        "201":
          description: "201"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/com.miniyus.friday.adapter.in.rest.resource.UserResources$AuthUserResource'
              examples:
                auth signup:
                  value: |-
                    {
                      "id" : 1,
                      "email" : "regenia.wilderman@example.com",
                      "name" : "Roseanne Bailey",
                      "role" : "MANAGER",
                      "snsId" : null,
                      "provider" : null
                    }
  /v1/users/{id}:
    get:
      tags:
      - users
      summary: user api
      description: user api
      operationId: retrieve user
      parameters:
      - name: id
        in: path
        description: user identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/com.miniyus.friday.adapter.in.rest.resource.UserResources$UserResource'
              examples:
                retrieve user:
                  value: |-
                    {
                      "id" : 1,
                      "email" : "matt.hudson@example.com",
                      "name" : "Nicholas Rodriguez",
                      "role" : "USER",
                      "snsId" : null,
                      "provider" : null,
                      "createdAt" : "2023-10-03T03:59:07.796913",
                      "updatedAt" : "2023-10-03T03:59:07.796924"
                    }
      security:
      - bearerAuthJWT: []
    delete:
      tags:
      - users
      summary: user api
      description: user api
      operationId: delete user
      parameters:
      - name: id
        in: path
        description: user identifier
        required: true
        schema:
          type: string
      responses:
        "204":
          description: "204"
      security:
      - bearerAuthJWT: []
    patch:
      tags:
      - users
      summary: user api
      description: user api
      operationId: update user
      parameters:
      - name: id
        in: path
        description: user identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/com.miniyus.friday.adapter.in.rest.request.UpdateUserRequest'
            examples:
              update user:
                value: |-
                  {
                    "name" : "Roger Farrell Jr.",
                    "role" : "USER"
                  }
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/com.miniyus.friday.adapter.in.rest.resource.UserResources$UserResource'
              examples:
                update user:
                  value: |-
                    {
                      "id" : 1,
                      "email" : "roderick.okeefe@example.com",
                      "name" : "Roger Farrell Jr.",
                      "role" : "USER",
                      "snsId" : null,
                      "provider" : null,
                      "createdAt" : "2023-10-03T03:59:07.679948",
                      "updatedAt" : "2023-10-03T03:59:07.679964"
                    }
      security:
      - bearerAuthJWT: []
  /v1/users/{id}/reset-password:
    patch:
      tags:
      - users
      summary: user api
      description: user api
      operationId: reset password
      parameters:
      - name: id
        in: path
        description: user identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/com.miniyus.friday.adapter.in.rest.request.ResetPasswordRequest'
            examples:
              reset password:
                value: |-
                  {
                    "password" : "ram5l0zny"
                  }
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/com.miniyus.friday.adapter.in.rest.resource.ResetPasswordResource'
              examples:
                reset password:
                  value: |-
                    {
                      "resetPassword" : true
                    }
      security:
      - bearerAuthJWT: []
components:
  schemas:
    com.miniyus.friday.adapter.in.rest.resource.UserResources$AuthUserResource:
      title: com.miniyus.friday.adapter.in.rest.resource.UserResources$AuthUserResource
      required:
      - email
      - id
      - name
      - provider
      - role
      - snsId
      type: object
      properties:
        role:
          type: string
          description: role
        name:
          type: string
          description: name
        id:
          type: number
          description: id
        email:
          type: string
          description: email
    com.miniyus.friday.infrastructure.jwt.IssueToken:
      title: com.miniyus.friday.infrastructure.jwt.IssueToken
      required:
      - accessToken
      - expiresIn
      - refreshToken
      - tokenType
      type: object
      properties:
        expiresIn:
          type: number
          description: expiresIn
        accessToken:
          type: string
          description: accessToken
        tokenType:
          type: string
          description: tokenType
        refreshToken:
          type: string
          description: refreshToken
    com.miniyus.friday.adapter.in.rest.request.UpdateUserRequest:
      title: com.miniyus.friday.adapter.in.rest.request.UpdateUserRequest
      required:
      - name
      - role
      type: object
      properties:
        role:
          type: string
          description: role
        name:
          type: string
          description: name
    com.miniyus.friday.adapter.in.rest.resource.ResetPasswordResource:
      title: com.miniyus.friday.adapter.in.rest.resource.ResetPasswordResource
      required:
      - resetPassword
      type: object
      properties:
        resetPassword:
          type: boolean
          description: reset password
    com.miniyus.friday.adapter.in.rest.resource.UserResources$UserResource:
      title: com.miniyus.friday.adapter.in.rest.resource.UserResources$UserResource
      required:
      - createdAt
      - email
      - id
      - name
      - provider
      - role
      - snsId
      - updatedAt
      type: object
      properties:
        createdAt:
          type: string
          description: createdAt
        role:
          type: string
          description: role
        name:
          type: string
          description: name
        id:
          type: number
          description: user identifier
        email:
          type: string
          description: email
        updatedAt:
          type: string
          description: updatedAt
    com.miniyus.friday.infrastructure.security.auth.userinfo.PasswordUserInfo:
      title: com.miniyus.friday.infrastructure.security.auth.userinfo.PasswordUserInfo
      required:
      - email
      - name
      - password
      type: object
      properties:
        password:
          type: string
          description: password
        name:
          type: string
          description: name
        email:
          type: string
          description: email
    com.miniyus.friday.adapter.in.rest.request.ResetPasswordRequest:
      title: com.miniyus.friday.users.adapter.in.rest.request.ResetPasswordRequest
      required:
      - password
      type: object
      properties:
        password:
          type: string
          description: password
    com.miniyus.friday.adapter.in.rest.request.CreateUserRequest:
      title: com.miniyus.friday.users.adapter.in.rest.request.CreateUserRequest
      required:
      - email
      - name
      - password
      - role
      type: object
      properties:
        password:
          type: string
          description: password
        role:
          type: string
          description: role
        name:
          type: string
          description: name
        email:
          type: string
          description: email
    com.miniyus.friday.infrastructure.security.auth.PasswordAuthentication:
      title: com.miniyus.friday.infrastructure.security.auth.PasswordAuthentication
      required:
      - email
      - password
      type: object
      properties:
        password:
          type: string
          description: password
        email:
          type: string
          description: email
    com.miniyus.friday.infrastructure.security.auth.response.PasswordTokenResponse:
      title: com.miniyus.friday.infrastructure.security.auth.response.PasswordTokenResponse
      required:
      - email
      - id
      - name
      - tokens
      type: object
      properties:
        name:
          type: string
          description: name
        tokens:
          required:
          - accessToken
          - expiresIn
          - refreshToken
          - tokenType
          type: object
          properties:
            expiresIn:
              type: number
              description: expiresIn
            accessToken:
              type: string
              description: accessToken
            tokenType:
              type: string
              description: tokenType
            refreshToken:
              type: string
              description: refreshToken
          description: tokens
        id:
          type: number
          description: id
        email:
          type: string
          description: email
  securitySchemes:
    bearerAuthJWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
