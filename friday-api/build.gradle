plugins {
	id "java"
	id "org.springframework.boot" version "3.1.5"
	id "io.spring.dependency-management" version "1.1.3"
	id "com.epages.restdocs-api-spec" version "0.18.4"
	id "org.hidetake.swagger.generator" version "2.18.2"
	id "org.springdoc.openapi-gradle-plugin" version "1.8.0"
    id "com.appland.appmap" version "1.2.0"
}

group = "com.miniyus"
version = System.getenv("APP_VERSION") ?: "0.0.1-SNAPSHOT"

java {
	sourceCompatibility = "17"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	umlDoclet
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-data-redis"
	implementation "org.springframework.boot:spring-boot-starter-data-rest"
	implementation "org.springframework.boot:spring-boot-starter-hateoas"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-client"
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
    }
	implementation("org.springframework.boot:spring-boot-starter-undertow")
	implementation "org.springframework.boot:spring-boot-starter-aop"
	implementation "org.springframework.boot:spring-boot-starter-mail"
	implementation "org.springframework.data:spring-data-rest-hal-explorer"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0"
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
	implementation "io.hypersistence:hypersistence-utils-hibernate-62:3.6.1"
	implementation "com.github.javafaker:javafaker:1.0.2"
	implementation "org.flywaydb:flyway-core"
	implementation "com.auth0:java-jwt:4.4.0"
	implementation "com.google.code.findbugs:jsr305:3.0.2"
	implementation "org.openapitools:jackson-databind-nullable:0.2.6"
	implementation "commons-io:commons-io:2.11.0"
    implementation "commons-codec:commons-codec"
	implementation "org.apache.commons:commons-lang3:3.13.0"
	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
	implementation "com.querydsl:querydsl-apt"
	implementation "com.github.downgoon:marvin:1.5.5"
    implementation "com.github.downgoon:MarvinPlugins:1.5.5"

	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	annotationProcessor "org.projectlombok:lombok"

	compileOnly "org.projectlombok:lombok"
	developmentOnly "org.springframework.boot:spring-boot-devtools"
	runtimeOnly "com.h2database:h2"
	runtimeOnly "org.postgresql:postgresql"

	umlDoclet "nl.talsmasoftware:umldoclet:2.1.1"

	testImplementation "org.projectlombok:lombok:1.18.28"
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc"
	testImplementation "com.epages:restdocs-api-spec-mockmvc:0.18.4"
    testImplementation "com.epages:restdocs-api-spec-restassured:0.18.4"
	testImplementation "org.springframework.security:spring-security-test"
	testImplementation "org.testcontainers:testcontainers:1.19.0"
	testImplementation "org.testcontainers:junit-jupiter"  // TC 의존성
	testImplementation "org.testcontainers:postgresql"     // PostgreSQL 컨테이너 사용
	testImplementation "org.testcontainers:jdbc"
	testImplementation "com.tngtech.archunit:archunit:1.1.0"
	testImplementation "org.springframework.cloud:spring-cloud-contract-wiremock"
	testImplementation "io.rest-assured:rest-assured:5.2.0"
    testImplementation "org.awaitility:awaitility:4.2.0"

	testCompileOnly "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"
}

tasks.named("test") {
	useJUnitPlatform()
}

tasks.register("acceptanceTest", Test) {
    useJUnitPlatform {
        includeTags "acceptance"
    }
}

tasks.register("integrationTest", Test) {
    useJUnitPlatform {
        includeTags "integration"
    }
}

tasks.register("unitTest", Test) {
    useJUnitPlatform {
        includeTags "unit"
    }
}

tasks.withType(GenerateSwaggerUI).configureEach {
	dependsOn "openapi3"

	delete file("src/main/resources/static/docs")
	copy {
		from "build/resources/main/static/docs"
		into "src/main/resources/static/docs"
	}
}

bootJar {
	archivesBaseName = "friday"
	archiveFileName = "friday.jar"

	dependsOn "openapi3"
}

def serverUrl = System.getenv("SERVER_URL") ?: "http://localhost:8080"

openApi {
    outputDir.set(file("build/docs"))
    outputFileName.set("friday-api.json")
    groupedApiMappings.set(["http://localhost:8080/v3/api-docs"    : "friday-api.json"])
}

openapi3 {
	server = serverUrl
	title = "Friday API"
	description = "Friday REST API Docs with Swagger UI."
	version = "0.0.1"
	outputFileNamePrefix = "friday-api"
	format = "yaml"
	outputDirectory = "build/resources/main/static/docs"
	tagDescriptionsPropertiesFile = "src/test/resources/tags.yaml"
}

postman {
    title = "Friday API"
    version = "0.0.1"
    baseUrl = "http://127.0.0.1:8080"
	outputFileNamePrefix = "friday-api"
	outputDirectory = "build/resources/main/static/docs"
}

def querydslSrcDir = "src/main/generated"
sourceSets {
  main {
    java {
      srcDirs += [ querydslSrcDir ]
    }
  }
}

compileJava {
    options.compilerArgs << "-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated"
}

tasks.withType(JavaCompile).configureEach {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

clean {
  delete file(querydslSrcDir)
}

appmap {
    configFile = file("$projectDir/appmap.yml")
    outputDirectory = file("build/appmap")
    skip = false
    debug = "info"
    debugFile = file("build/appmap/agent.log")
    eventValueSize = 1024
}

javadoc {
    source = sourceSets.main.allJava
    options.memberLevel = JavadocMemberLevel.PRIVATE
    options.docletpath = configurations.umlDoclet.files.asType(List)
    options.doclet = "nl.talsmasoftware.umldoclet.UMLDoclet"
}
